services:
  chroma:
    image: chromadb/chroma:1.0.20
    container_name: chroma
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
      - ANONYMIZED_TELEMETRY=False
      - ALLOW_RESET=True
    ports:
      - "8001:8000"
    volumes:
      - ./chroma_data:/chroma/.chromadb
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/api/v1/" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  # --- Esta versión no necesita definición del embed-service ---
  agents_service:
    build:
      context: ./agents
      dockerfile: Dockerfile
    container_name: agents_service
    environment:
      - OPENAI_API=http://host.docker.internal:1234/v1
    volumes:
      - ./agents:/app
    ports:
      - "8020:8020"
    restart: unless-stopped

  api:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: rag_api
    environment:
      - CHROMA_HOST=chroma
      - CHROMA_PORT=8000
      - CHROMA_TENANT=default_tenant
      - CHROMA_DATABASE=default_database
      - CHROMA_COLLECTION=resoluciones_cu
      - CHROMA_DISTANCE=cosine

      # Conexión al LLM (ej. LM Studio)
      - LLM_BASE_URL=http://host.docker.internal:1234/v1
      - LLM_MODEL=openai/gpt-oss-20b
      - LLM_API_KEY=notused
      - MAX_ANSWER_CHUNKS=8
      - TOP_K=30
      - TEMPERATURE=0.2
      - MAX_TOKENS=1600

      # Document chunking settings
      - CHUNK_MAX_TOKENS=1000
      - CHUNK_OVERLAP_TOKENS=0

      - CHUNK_USE_SPACY=1
      - SPACY_MODEL=es_core_news_sm
      - SPACY_MAX_LENGTH=5000000

      # Configuración de BM25
      - BM25_INDEX_DIR=/data/whoosh_index
      - K_LEX=100
      - RERANK_TOP=24
      - RRF_K=60

      # Configuración de embeddings a través del servicio interno
      # 'host.docker.internal' es una dirección especial que desde el contenedor
      # Apunta a la máquina local
      - EMBED_BASE_URL=http://host.docker.internal:8010
      - EMBED_MODEL=littlejohn-ai/bge-m3-spa-law-qa
      - EMBED_API_KEY=notused

      #Configuración de reranker
      - RERANKER_BASE_URL=http://host.docker.internal:1245/v1
      - RERANKER_MODEL=jina-reranker-v3-mlx

      # --- Conexión al Servicio de Agentes ---
      - FILTER_AGENT_URL=http://agents_service:8020/query-filters

      #MODS
      - USE_HYDE=0
      - USE_MULTIQUERY=1
      - MULTIQUERY_N=3
      - RERANKER_ENABLED=1

    volumes:
      - ./app:/app
      - ./data:/data
    depends_on:
      - chroma
      - agents_service
    ports:
      - "8099:8099"
    restart: unless-stopped
